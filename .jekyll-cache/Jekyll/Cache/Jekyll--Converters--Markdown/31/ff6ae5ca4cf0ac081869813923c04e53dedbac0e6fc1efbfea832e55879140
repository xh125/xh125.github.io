I"#T<h1 id="fewest-switches-surface-hopping-in-materials-with-lvc">Fewest Switches Surface Hopping in Materials with LVC</h1>

<p>A Fortran code to simulation the non-adiabatic Molecular Dynamics in the solid state Materials.
We using a linear vibroninc coupling model implementation of Tully’s Fewest Switches Surface Hopping (FSSH) for model problems including
a propagator and an implementation of Tully’s model problems described in Tully, <a href="https://aip.scitation.org/doi/abs/10.1063/1.459170">J.C. <em>J. Chem. Phys.</em> (1990) <strong>93</strong> 1061</a>.</p>

<h2 id="install">Install</h2>

<p>The code are writen in Fortran, and need MKL Fortran 95 library. To compiler the code, do as follwing step.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>module load compiler/intel/2020.4.302
<span class="nb">tar</span> <span class="nt">-zxvf</span> lvcsh.tar.gz
<span class="nb">cd </span>LVCSH  
<span class="nb">cd </span>make  
make    
<span class="nb">cd</span> ../make_complex  
make  
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="recompile-quantum_espresso">Recompile Quantum_Espresso</h2>

<p>The the code use the EPW output file as main input file. Now only the version of <a href="https://github.com/QEF/q-e/releases/tag/qe-6.8"><strong>V.6.8</strong> of Quantum_Espresso</a> be support and need to change the <a href="https://epw-code.org/">EPW</a> source code and recompile to print out the gmnvkq and vmef in complex formated.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nb">cp </span>LVCSH/docs/QE_change_code/v6.8/<span class="k">*</span> qe-6.8/EPW/src
<span class="nb">cd </span>qe-6.8
make epw
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="tutorial">Tutorial</h2>

<ol>
  <li>
    <p>make a work directory (<strong>Carbyne</strong>)</p>
  </li>
  <li>
    <p>In work directory do epw calculate, to get the electron-phonon coupling matrix. the dir structure as follow</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>                 <span class="o">(</span>work directory<span class="o">)</span>  
     ___________________|_______________________________
    |       |       |     |         |          |        |
  relax   pseudo   scf   dos     phonon       epw      LVCSH
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>计算电声耦合项的步骤如下所示。在不同的目录下面进行结构优化、自洽计算、声子谱计算和电声耦合计算</p>

    <p>2.1 进入relax目录，创建<a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html">vc-relax.in</a> 进行晶格结构优化。对于参数的设置，<a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html#etot_conv_thr"><strong><code class="language-plaintext highlighter-rouge">etot_conv_thr</code></strong></a>,<a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html#forc_conv_thr"><strong><code class="language-plaintext highlighter-rouge">forc_conv_thr</code></strong></a>,<a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html#conv_thr"><strong><code class="language-plaintext highlighter-rouge">conv_thr</code></strong></a>和<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#press_conv_thr"><strong><code class="language-plaintext highlighter-rouge">press_conv_thr</code></strong></a>的精度需要设置的比较高，需要用于后续计算<strong>phonon</strong>. 在该案例中收敛判据可能不够，在实际的计算中，应该根据需要进行设置。</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
</pre></td><td class="rouge-code"><pre><span class="n">vc</span><span class="o">-</span><span class="n">relax</span><span class="err">.</span><span class="k">in</span><span class="w">
</span><span class="p">&amp;</span><span class="n">CONTROL</span><span class="w">
 </span><span class="n">calculation</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s2">"vc-relax"</span><span class="w">  
 </span><span class="n">restart_mode</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="s2">"from_scratch"</span><span class="w">
 </span><span class="n">prefix</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="s2">"carbyne"</span><span class="w">
 </span><span class="n">outdir</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="s2">"./"</span><span class="w">
 </span><span class="n">pseudo_dir</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="s2">"./pseudo/"</span><span class="w">
 </span><span class="n">verbosity</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="s2">"high"</span><span class="w">
 </span><span class="n">tprnfor</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">  
 </span><span class="n">tstress</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
 </span><span class="n">etot_conv_thr</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="mf">1.0d-5</span><span class="w">
 </span><span class="n">forc_conv_thr</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="mf">1.0d-4</span><span class="w">
</span><span class="p">/</span><span class="w">

</span><span class="p">&amp;</span><span class="n">SYSTEM</span><span class="w">
 </span><span class="n">ibrav</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="w">
 </span><span class="n">nat</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">2</span><span class="w">
 </span><span class="n">ntyp</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
 </span><span class="c1">!nbnd        = 16</span><span class="w">
 </span><span class="n">occupations</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'fixed'</span><span class="w">
 </span><span class="c1">!    occupations = "smearing"</span><span class="w">
 </span><span class="c1">!    smearing    = "cold"    </span><span class="w">
 </span><span class="c1">!    degauss     =  1.0d-2</span><span class="w">
 </span><span class="n">ecutwfc</span><span class="w">     </span><span class="o">=</span><span class="w">  </span><span class="mi">50</span><span class="w">
 </span><span class="n">ecutrho</span><span class="w">     </span><span class="o">=</span><span class="w">  </span><span class="mi">400</span><span class="w">
 </span><span class="p">/</span><span class="w">

 </span><span class="p">&amp;</span><span class="n">ELECTRONS</span><span class="w">
 </span><span class="n">conv_thr</span><span class="w">         </span><span class="o">=</span><span class="w">  </span><span class="mf">1.000e-7</span><span class="w">
 </span><span class="n">electron_maxstep</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="mi">200</span><span class="w">
 </span><span class="n">mixing_beta</span><span class="w">      </span><span class="o">=</span><span class="w">  </span><span class="mf">7.00000e-01</span><span class="w">
 </span><span class="n">startingpot</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="s2">"atomic"</span><span class="w">
 </span><span class="n">startingwfc</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="s2">"atomic+random"</span><span class="w">
 </span><span class="p">/</span><span class="w">

 </span><span class="p">&amp;</span><span class="n">IONS</span><span class="w">
 </span><span class="n">ion_dynamics</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"bfgs"</span><span class="w">
 </span><span class="p">/</span><span class="w">

 </span><span class="p">&amp;</span><span class="n">CELL</span><span class="w">
 </span><span class="n">cell_dofree</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="s2">"x"</span><span class="w">
 </span><span class="n">cell_dynamics</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="s2">"bfgs"</span><span class="w">
 </span><span class="n">press_conv_thr</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="mf">0.02</span><span class="w">
 </span><span class="p">/</span><span class="w">

 </span><span class="n">K_POINTS</span><span class="w"> </span><span class="err">{</span><span class="n">automatic</span><span class="err">}</span><span class="w">
  </span><span class="mi">200</span><span class="w">  </span><span class="mi">1</span><span class="w">  </span><span class="mi">1</span><span class="w">  </span><span class="mi">0</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="mi">0</span><span class="w">

 </span><span class="n">ATOMIC_SPECIES</span><span class="w">
 </span><span class="n">C</span><span class="w">      </span><span class="mf">12.01070</span><span class="w">  </span><span class="n">C</span><span class="err">.</span><span class="n">pbe</span><span class="o">-</span><span class="n">n</span><span class="o">-</span><span class="n">kjpaw_psl</span><span class="mf">.1.0.0</span><span class="err">.</span><span class="n">UPF</span><span class="w">

 </span><span class="n">CELL_PARAMETERS</span><span class="w"> </span><span class="p">(</span><span class="n">angstrom</span><span class="p">)</span><span class="w">
 </span><span class="mf">2.565602620</span><span class="w">   </span><span class="mf">0.000000000</span><span class="w">   </span><span class="mf">0.000000000</span><span class="w">
 </span><span class="mf">0.000000000</span><span class="w">  </span><span class="mf">10.000000000</span><span class="w">   </span><span class="mf">0.000000000</span><span class="w">
 </span><span class="mf">0.000000000</span><span class="w">   </span><span class="mf">0.000000000</span><span class="w">  </span><span class="mf">10.000000000</span><span class="w">

 </span><span class="n">ATOMIC_POSITIONS</span><span class="w"> </span><span class="p">(</span><span class="n">angstrom</span><span class="p">)</span><span class="w">
 </span><span class="n">C</span><span class="w">             </span><span class="mf">0.0002913894</span><span class="w">       </span><span class="mf">5.0000000000</span><span class="w">       </span><span class="mf">5.0000000000</span><span class="w">
 </span><span class="n">C</span><span class="w">             </span><span class="mf">1.2644833916</span><span class="w">       </span><span class="mf">5.0000000000</span><span class="w">       </span><span class="mf">5.0000000000</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>采用下面命令查看计算过程中的受力情况已经压力张量和晶格常数变化情况</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">cat </span>vc-relax.out |grep <span class="nt">-A</span> 12 <span class="s2">"Total force ="</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>计算结束后，使用下面命令得到优化后的结果</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">grep</span> <span class="nt">-B</span> 30 <span class="s2">"Begin final coordinates"</span> vc-relax.out
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">awk</span>  <span class="s1">'/Begin final coordinates/,/End final coordinates/{print $0}'</span> vc-relax.out
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre>   
Begin final coordinates
     new unit-cell volume <span class="o">=</span>   1731.62982 a.u.^3 <span class="o">(</span>   256.60106 Ang^3 <span class="o">)</span>
     density <span class="o">=</span>      0.15545 g/cm^3
   
CELL_PARAMETERS <span class="o">(</span>angstrom<span class="o">)</span>
   2.566010647   0.000000000   0.000000000
   0.000000000  10.000000000   0.000000000
   0.000000000   0.000000000  10.000000000
   
ATOMIC_POSITIONS <span class="o">(</span>angstrom<span class="o">)</span>
C             0.0019333750        5.0000000000        5.0000000000
C             1.2630425527        5.0000000000        5.0000000000
End final coordinates
      
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.2 <code class="language-plaintext highlighter-rouge">cp vc-relax.in relax.in</code> 将上面优化得到的<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#CELL_PARAMETERS"><strong><code class="language-plaintext highlighter-rouge">CELL_PARAMETERS</code></strong></a> 和<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#ATOMIC_POSITIONS"><strong><code class="language-plaintext highlighter-rouge">ATOMIC_POSITIONS</code></strong></a> 结果在relax.in中进行修改，并修改为<code class="language-plaintext highlighter-rouge">calculation = "relax"</code>, 将<code class="language-plaintext highlighter-rouge">&amp;CELL /</code>部分注释掉。再对原子位置进行优化。计算完成后，运行下列命令查看优化过程中原子受力情况和得到优化后的原子位置。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">cat </span>relax.out |grep <span class="nt">-A</span> 12 <span class="s2">"Total force ="</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">grep</span> <span class="nt">-B</span> 30 <span class="s2">"Begin final coordinates"</span> vc-relax.out
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">awk</span>  <span class="s1">'/Begin final coordinates/,/End final coordinates/{print $0}'</span> relax.out  
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>得到如下结果：</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>Begin final coordinates

 ATOMIC_POSITIONS <span class="o">(</span>angstrom<span class="o">)</span>
 C             0.0019333750        5.0000000000        5.0000000000
 C             1.2630425527        5.0000000000        5.0000000000
 End final coordinates
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.3 <code class="language-plaintext highlighter-rouge">cp relax.in scf.in</code> 将上面的原子位置（<strong>ATOMIC_POSITIONS</strong>）结果在scf.in文件中进行修改。修改<code class="language-plaintext highlighter-rouge">calculation = "scf"</code> 将<code class="language-plaintext highlighter-rouge">&amp;IONS /</code> 部分注释掉。<code class="language-plaintext highlighter-rouge">mkdir ../scf</code> 并将修改后的scf.in文件复制到<code class="language-plaintext highlighter-rouge">../scf</code>中，修改<code class="language-plaintext highlighter-rouge">scf.in</code>中的<code class="language-plaintext highlighter-rouge">outdir= './'</code> 进行自洽计算。</p>

    <p>2.4 计算态密度.修改<code class="language-plaintext highlighter-rouge">calculaiton='nscf'</code> 并增加<code class="language-plaintext highlighter-rouge">kpoint</code>的采样密度。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nb">cp</span> <span class="nt">-r</span> scf dos
<span class="nb">cd </span>dos
<span class="nb">mv </span>scf.in nscf.in
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>使用<a href="http://www.quantum-espresso.org/Doc/INPUT_DOS.html">dos.x</a>对nscf计算得态密度进行处理。输入文件<code class="language-plaintext highlighter-rouge">dos.in</code>如下：</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="p">&amp;</span><span class="n">DOS</span><span class="w">
</span><span class="n">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne'</span><span class="w">
</span><span class="n">outdir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'./outdir'</span><span class="w">
</span><span class="n">bz_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"smearing"</span><span class="w">
</span><span class="n">ngauss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="w">
</span><span class="n">degauss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">2.0d-2</span><span class="w">
</span><span class="n">DeltaE</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mf">0.01</span><span class="w">
</span><span class="n">fildos</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne.dos'</span><span class="w">
</span><span class="p">/</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>对计算出来的态密度采用OriginPro进行作图，(采用较密kpoint计算的结果)如下所示。<br />
<img src="https://xh125.github.io/images/LVCSH/dos.png" alt="dos" /></p>

    <p>采用 <a href="http://www.quantum-espresso.org/Doc/INPUT_PROJWFC.html">projwfc.x</a> 对态密度进行分波态密度计算，用于bandfat分析，后面进行Wannier计算，需要根据分波态密度来选取初始猜测的wannier函数。</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="n">projwfc</span><span class="err">.</span><span class="k">in</span><span class="w">
</span><span class="err"> </span><span class="w">
 </span><span class="p">&amp;</span><span class="n">PROJWFC</span><span class="w">
</span><span class="n">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne'</span><span class="w">
</span><span class="n">outdir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'./outdir'</span><span class="w">
</span><span class="n">ngauss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="w">
</span><span class="n">degauss</span><span class="o">=</span><span class="w"> </span><span class="mf">0.01</span><span class="w">
</span><span class="n">DeltaE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="n">filpdos</span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne.pdos'</span><span class="w">
</span><span class="n">filproj</span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne.proj'</span><span class="w">
</span><span class="p">/</span><span class="w"> 
   
</span><span class="n">projwfc</span><span class="err">.</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;</span><span class="n">projwfc</span><span class="err">.</span><span class="k">in</span><span class="o">&gt;</span><span class="n">projwfc</span><span class="err">.</span><span class="k">out</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>处理分波态密度得到的结果如下:</p>

    <p><img src="https://xh125.github.io/images/LVCSH/Pdos.png" alt="Pdos" /></p>

    <p>2.5 计算能带,修改<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#calculation"><strong><code class="language-plaintext highlighter-rouge">calculation='bands'</code></strong></a>，<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#nbnd"><strong><code class="language-plaintext highlighter-rouge">nbnd</code></strong></a> 和<a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#K_POINTS"><strong><code class="language-plaintext highlighter-rouge">K_POINTS crystal_b</code></strong></a>部分进行第一布里渊区高对称kpoint的能带计算。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="nb">cp</span> <span class="nt">-r</span> scf band
<span class="nb">cd </span>band
<span class="nb">cp </span>scf.in pw-bands.in
   
calculation   <span class="o">=</span> <span class="s2">"bands"</span>
nbnd <span class="o">=</span> 22
K_POINTS crystal_b
3
<span class="nt">-0</span>.5 0.0 0.0 50
 0.0 0.0 0.0 50
 0.5 0.0 0.0 1
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>计算完成后使用<a href="http://www.quantum-espresso.org/Doc/INPUT_BANDS.html">bands.x</a>处理能带数据。在能带计算之后，用<a href="http://www.quantum-espresso.org/Doc/INPUT_PROJWFC.html">projwfc.x</a>生成的fatband.projwfc_up文件，可以和bands.x生成的文件bands.dat结合，画出各个能带的原子轨道投影，画图脚本如下：<a href="https://github.com/xh125/LVCSH/blob/master/tools/bandfat.f90">/LVCSH/tools/fatband.f90</a>。<br />
计算能带图如下:<br />
<img src="https://xh125.github.io/images/LVCSH/fatband.png" alt="band.png" /></p>

    <p>2.6 根据fatband中的结果，进行<a href="http://www.wannier.org/">wannier90</a>计算</p>

    <p>2.6.1 Scf计算</p>

    <p>2.6.2 nscf计算</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="nb">cp </span>scf.in nscf.in并做如下修改
calculation   <span class="o">=</span> <span class="s2">"nscf"</span> 
nbnd        <span class="o">=</span> 16
<span class="o">!</span>K_POINTS <span class="o">{</span>automatic<span class="o">}</span>
<span class="o">!</span> 1  1  40  0 0 0
   
kmesh.pl 1 1 40 <span class="o">&gt;&gt;</span>nscf.in
pw.x &lt; nscf.in <span class="o">&gt;</span> nscf.out
   
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.6.3 Wannier90计算</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="c1">!System</span><span class="w">
</span><span class="n">num_wann</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mi">4</span><span class="w">
</span><span class="n">num_bands</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">6</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="c1">!Projection</span><span class="w">
</span><span class="n">begin</span><span class="w"> </span><span class="n">projections</span><span class="w">
</span><span class="n">C</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">px</span><span class="p">;</span><span class="n">py</span><span class="w">
</span><span class="k">end</span><span class="w"> </span><span class="n">projections</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="c1">!Job Control</span><span class="w">
</span><span class="n">exclude_bands</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1-2</span><span class="w">
</span><span class="c1">!restart =</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="c1">!disentanglement</span><span class="w">
</span><span class="n">dis_win_min</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mf">-25.0</span><span class="w">
</span><span class="n">dis_win_max</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mf">7.0</span><span class="w">
</span><span class="n">dis_froz_min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">-12.0</span><span class="w">
</span><span class="n">dis_froz_max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">-0.6</span><span class="w">
</span><span class="n">dis_num_iter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1000</span><span class="w">
</span><span class="n">dis_mix_ratio</span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="n">dis_conv_tol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0E-10</span><span class="w">
</span><span class="n">dis_conv_window</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">5</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="c1">!Wannierise</span><span class="w">
</span><span class="n">num_iter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">10000</span><span class="w">
</span><span class="n">conv_tol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0E-10</span><span class="w">
</span><span class="n">conv_window</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="mi">10</span><span class="w">
</span><span class="n">guiding_centres</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">

</span><span class="c1">! SYSTEM</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="n">begin</span><span class="w"> </span><span class="n">unit_cell_cart</span><span class="w">
</span><span class="n">Ang</span><span class="w">
  </span><span class="mf">20.000000</span><span class="w">   </span><span class="mf">0.000000</span><span class="w">   </span><span class="mf">0.000000</span><span class="w">
  </span><span class="mf">0.000000</span><span class="w">  </span><span class="mf">20.000000</span><span class="w">   </span><span class="mf">0.000000</span><span class="w">
  </span><span class="mf">0.000000</span><span class="w">   </span><span class="mf">0.000000</span><span class="w">   </span><span class="mf">2.565985410</span><span class="w">
</span><span class="k">end</span><span class="w"> </span><span class="n">unit_cell_cart</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="n">begin</span><span class="w"> </span><span class="n">atoms_cart</span><span class="w">
</span><span class="n">Ang</span><span class="w">
</span><span class="n">C</span><span class="w">       </span><span class="mf">10.0000000000</span><span class="w">       </span><span class="mf">10.0000000000</span><span class="w">       </span><span class="mf">-0.0019756118</span><span class="w">
</span><span class="n">C</span><span class="w">       </span><span class="mf">10.0000000000</span><span class="w">       </span><span class="mf">10.0000000000</span><span class="w">        </span><span class="mf">1.2517014809</span><span class="w">
</span><span class="k">end</span><span class="w"> </span><span class="n">atoms_cart</span><span class="w">
</span><span class="err"> </span><span class="w">
</span><span class="c1">! KPOINTS     </span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nb">echo</span> <span class="s2">"mp_grid = 1 1 40"</span><span class="o">&gt;&gt;</span><span class="k">${</span><span class="nv">seedname</span><span class="k">}</span>.win
<span class="nb">echo</span> <span class="s2">"begin kpoints"</span><span class="o">&gt;&gt;</span><span class="k">${</span><span class="nv">seedname</span><span class="k">}</span>.win
kmesh.pl 1 1 40 wannier <span class="o">&gt;&gt;</span><span class="k">${</span><span class="nv">seedname</span><span class="k">}</span>.win
<span class="nb">echo</span> <span class="s2">"end kpoints"</span><span class="o">&gt;&gt;</span><span class="k">${</span><span class="nv">seedname</span><span class="k">}</span>.win
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.6.4 ‘wannier90.x -pp seedname’<br />
2.6.5 <code class="language-plaintext highlighter-rouge">pw2wannier90.x &lt; pw2wan.in &gt; pw2wan.out</code></p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="n">pw2wan</span><span class="err">.</span><span class="k">in</span><span class="w">
</span><span class="p">&amp;</span><span class="n">inputpp</span><span class="w">
   </span><span class="n">outdir</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s1">'./outdir'</span><span class="w">
   </span><span class="n">prefix</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne'</span><span class="w">
   </span><span class="n">seedname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne'</span><span class="w">
   </span><span class="n">spin_component</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'none'</span><span class="w">
   </span><span class="n">write_mmn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
   </span><span class="n">write_amn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
   </span><span class="n">write_unk</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="p">/</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.6.6 <code class="language-plaintext highlighter-rouge">mpirun -np $NP wannier90.x seedname</code> 通过wannier90计算，找到进行wannier拟合的相关参数设置，后续用于EPW计算中wannier拟合相关部分参数的设置。</p>

    <p>2.7 采用DFPT进行<a href="http://www.quantum-espresso.org/Doc/INPUT_PH.html">phonon</a>计算。（为了后续数据处理，phonon计算需要设置的<code class="language-plaintext highlighter-rouge">outdir='./'</code>）,为了声子谱计算的更准确，scf计算中可以使用更密的K点，更少的q点。<br />
2.7.1 <code class="language-plaintext highlighter-rouge">cp -r scf phonon</code>, 设置scf.in 输入文件.其中电子自洽收敛需要设置的高一些，这样后续采用DFPT计算声子谱和电声耦合值会有更高精度。nbnd的设置对后续电声耦合计算无影响，K_POINTS的设置需要注意，后面EPW计算中需要与DFT计算的设置相同,K_POINTS的值可以设置的高一些，以使得phonon band计算出来的声子谱收敛。</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">outdir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'./'</span><span class="w">
</span><span class="c1">!nbnd = 22</span><span class="w">
</span><span class="n">conv_thr</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0e-9</span><span class="w">
   
</span><span class="n">K_POINTS</span><span class="w"> </span><span class="err">{</span><span class="n">automatic</span><span class="err">}</span><span class="w">
 </span><span class="mi">40</span><span class="w">  </span><span class="mi">1</span><span class="w">  </span><span class="mi">1</span><span class="w">  </span><span class="mi">0</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="mi">0</span><span class="w">

</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.7.2 进行<a href="http://www.quantum-espresso.org/Doc/INPUT_PH.html">phonon</a>计算。<a href="http://www.quantum-espresso.org/Doc/INPUT_PH.html#tr2_ph"><strong><code class="language-plaintext highlighter-rouge">tr2_ph=1.0d-16</code></strong></a>需要设置的精度高一些。必须设置<a href="http://www.quantum-espresso.org/Doc/INPUT_PH.html#fildvscf"><strong><code class="language-plaintext highlighter-rouge">fildvscf</code></strong></a>以输出自洽势对normal mode的导数。</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="w">   
</span><span class="n">phonons</span><span class="w"> </span><span class="n">calculation</span><span class="w">
</span><span class="p">&amp;</span><span class="n">inputph</span><span class="w">
</span><span class="c1">! recover  = .true.</span><span class="w">
  </span><span class="n">tr2_ph</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0d-16</span><span class="p">,</span><span class="w">
  </span><span class="n">prefix</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne'</span><span class="p">,</span><span class="w">
  </span><span class="n">outdir</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s1">'./'</span><span class="w">
  </span><span class="n">lraman</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="c1">! epsil    = .true. !use for insulators</span><span class="w">
  </span><span class="n">ldisp</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
  </span><span class="n">nq1</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">40</span><span class="w">
  </span><span class="n">nq2</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
  </span><span class="n">nq3</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span><span class="c1">! amass(1) = 0.0</span><span class="w">
  </span><span class="n">fildyn</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s1">'carbyne.dyn'</span><span class="w">
  </span><span class="n">fildvscf</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'dvscf'</span><span class="w">
</span><span class="p">/</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.7.3 采用q2r.x进行力常数矩阵的傅里叶变换，得到实空间中的动力学矩阵，并添加声学支求和，使得$\Gamma$点的声学支频率求和为0.</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">&amp;</span><span class="n">input</span><span class="w">
</span><span class="n">fildyn</span><span class="o">=</span><span class="s1">'carbyne.dyn'</span><span class="p">,</span><span class="w"> </span><span class="n">zasr</span><span class="o">=</span><span class="s1">'simple'</span><span class="p">,</span><span class="w"> </span><span class="n">flfrc</span><span class="o">=</span><span class="s1">'flfrc'</span><span class="w">
</span><span class="p">/</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.7.4 使用matdyn.x 对实空间中力常数矩阵进行逆傅里叶变换，计算声子谱和声子态密度。</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="p">&amp;</span><span class="n">input</span><span class="w">
</span><span class="n">asr</span><span class="o">=</span><span class="s1">'simple'</span><span class="p">,</span><span class="w"> 
</span><span class="c1">!amass(1)=26.98, amass(2)=74.922,</span><span class="w">
</span><span class="n">flfrc</span><span class="o">=</span><span class="s1">'flfrc'</span><span class="p">,</span><span class="w"> 
</span><span class="n">flfrq</span><span class="o">=</span><span class="s1">'phonon-freq'</span><span class="p">,</span><span class="w"> 
</span><span class="n">q_in_band_form</span><span class="o">=</span><span class="kc">.true.</span><span class="p">,</span><span class="w">
</span><span class="p">/</span><span class="w">
</span><span class="nl">2</span><span class="w">
</span><span class="nl">0</span><span class="mf">.0</span><span class="w"> </span><span class="mf">0.0</span><span class="w"> </span><span class="mf">0.0</span><span class="w"> </span><span class="mi">100</span><span class="w">
</span><span class="nl">0</span><span class="mf">.5</span><span class="w"> </span><span class="mf">0.0</span><span class="w"> </span><span class="mf">0.0</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>使用plotband.x处理声子谱数据。plotband.in</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="n">phonon</span><span class="o">-</span><span class="n">freq</span><span class="w">
</span><span class="nl">0</span><span class="w"> </span><span class="mi">4000</span><span class="w">
</span><span class="n">phonon</span><span class="o">-</span><span class="n">freq</span><span class="err">.</span><span class="n">plot</span><span class="w">
</span><span class="n">phonon</span><span class="o">-</span><span class="n">freq</span><span class="err">.</span><span class="n">ps</span><span class="w">
</span><span class="nl">0</span><span class="mf">.0</span><span class="w">
</span><span class="nl">0</span><span class="mf">.1</span><span class="w"> </span><span class="mf">0.0</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>计算得到的声子谱如下图所示：<br />
<img src="https://xh125.github.io/images/LVCSH/phonon.png" alt="band-tructure-phonon" /></p>

    <p>2.7.5 使用matdyn.x计算声子态密度. matdyn-dos.in</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="p">&amp;</span><span class="n">input</span><span class="w">
    </span><span class="n">asr</span><span class="o">=</span><span class="s1">'simple'</span><span class="p">,</span><span class="w"> 
</span><span class="c1">!   amass(1)=26.98, amass(2)=74.922,</span><span class="w">
    </span><span class="n">flfrc</span><span class="o">=</span><span class="s1">'flfrc'</span><span class="p">,</span><span class="w"> 
</span><span class="c1">!    flfrq='flfrq', </span><span class="w">
</span><span class="c1">!    la2F=.true.</span><span class="w">
    </span><span class="n">dos</span><span class="o">=</span><span class="kc">.true.</span><span class="w">
    </span><span class="n">fldos</span><span class="o">=</span><span class="s2">"phonon-dos"</span><span class="w">
    </span><span class="n">nk1</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">nk2</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">nk3</span><span class="o">=</span><span class="mi">100</span><span class="w">
</span><span class="p">/</span><span class="w">
   
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>2.7.6 使用pp.py(位于目录<strong>EPW/bin</strong>下)收集ph.x计算得到的fildvscf相关文件到save文件夹。</p>

    <p>2.8 <a href="https://docs.epw-code.org/doc/Inputs.html">EPW</a> 计算电声耦合强度.计算电声耦合强度需要在scf计算和phonon计算中采用较高的收敛判据。包括：<code class="language-plaintext highlighter-rouge">etot_conv_thr</code>,<code class="language-plaintext highlighter-rouge">forc_conv_thr</code>,<code class="language-plaintext highlighter-rouge">press_conv_thr</code>,<code class="language-plaintext highlighter-rouge">conv_thr</code> ,<code class="language-plaintext highlighter-rouge">tr2_ph</code></p>

    <ul>
      <li>第一步：进入phonon目录进行scf自洽计算</li>
      <li>
        <p>第二步：ph.x进行DFPT计算（最费时间，需要注意设置参数<code class="language-plaintext highlighter-rouge">fildyn</code>和<code class="language-plaintext highlighter-rouge">fildvscf</code>)<br />
在phonon计算中可以使用 <a href="http://www.quantum-espresso.org/Doc/INPUT_PH.html#idm357"><code class="language-plaintext highlighter-rouge">-nimage N</code></a> 参数进行并行计算，可以在不同的节点上计算不同的q点。On parallel machines the q point and the irreps calculations can be split
automatically using the -nimage flag. See the phonon user guide for further
information.</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>mpirun <span class="nt">-np</span> <span class="nv">$NP</span> <span class="nt">-machinefile</span> <span class="k">${</span><span class="nv">CURDIR</span><span class="k">}</span>/nodelist ph.x <span class="nt">-ni</span> 6 <span class="nt">-npool</span> 28 &lt;ph.in&gt; ph.out<span class="sb">`</span>
</pre></td></tr></tbody></table></code></pre></div>        </div>
      </li>
      <li>第三步：使用pp.py收集ph.x计算得到的fildvscf相关文件到save文件夹</li>
      <li>第四步：进入epw目录，先进行scf计算（或者将phonon目录中的内容拷贝过来），再进行nscf计算,需要设置所有的k点并且修改 <a href="http://www.quantum-espresso.org/Doc/INPUT_PW.html#nbnd"><strong><code class="language-plaintext highlighter-rouge">nbnd</code></strong></a> 的值。scf计算和nscf计算需要使用与phonon计算时相同的参数设置和计算精度。<br />
<code class="language-plaintext highlighter-rouge">kmesh.pl 40 1 1 &gt;&gt;${prefix}.nscf.in</code></li>
      <li>第五步，设置 <strong>epw.in</strong> 文件，进行epw计算，设置<a href="https://docs.epw-code.org/doc/Inputs.html#prtgkk"><code class="language-plaintext highlighter-rouge">prtgkk</code></a>以及<a href="https://docs.epw-code.org/doc/Inputs.html#ephwrite"><code class="language-plaintext highlighter-rouge">ephwrite</code></a>.注意<a href="https://docs.epw-code.org/doc/Inputs.html#fsthick"><strong>fsthick</strong></a>的设置，会影响打印出来的电声耦合矩阵元包含的能带数和q点数。EPW计算完成后需要检查插值后的phonon的频率（插值可能导致出现虚频，与wannier插值傅里叶变换有关，可能需要重新设置wannier插值参数）。epw.in如下：</li>
    </ul>

    <pre><code class="language-forrtran">epw calculation of carbyne
&amp;inputepw
  prefix = 'carbyne'
  outdir = './'
  amass(1)= 12.0107
  dvscf_dir = '../phonon/save/'
   
  iverbosity = 0
   
  elph        = .true.
  ep_coupling = .true.

! epbwrite    = .true.
! epbread     = .false.
  epwwrite    = .true.
  epwread     = .false.
! etf_mem     = 1
     
  prtgkk   = .true.
! ephwrite = .true.

!  eig_read    = .true.
   
  lifc        = .true.
  asr_typ     = 'crystal'
   
  wannierize = .true.
  nbndsub     =  4
  bands_skipped = 'exclude_bands = 1-2'
  num_iter = 10000
  iprint   = 2
!  dis_win_max = 12
!  dis_win_min = -25
!  dis_froz_min = -11
  dis_froz_max = -0.2
  proj(1) = 'C:py;pz'
!  proj(2) = 'C:sp-1'
  write_wfn= .true.
  wannier_plot= .true.
  wdata(1)= 'bands_plot = .true.'
  wdata(2)= 'begin kpoint_path'
  wdata(3)= 'G 0.00 0.00 0.00 M 0.50 0.00 0.00'
  wdata(4)= 'end kpoint_path'
  wdata(5)= 'bands_plot_format = gnuplot'
  wdata(6)= 'conv_tol      = 1.0e-10 '
  wdata(7)= 'conv_window   = 3      '
  wdata(8)= 'dis_conv_tol  = 1.0e-10 '
  wdata(9)= 'dis_conv_window = 3     '
  wdata(10)= 'dis_num_iter= 10000      '
  wdata(11)= 'dis_mix_ratio= 0.5      '
  wdata(12)= 'guiding_centres = .true.'
  wdata(13)= 'translate_home_cell  : true'
  wdata(14)= 'translation_centre_frac :   0.0 0.0 0.0  '
   
  elecselfen  = .false.
  phonselfen  = .false.
  a2f         = .false.
   
  fsthick     = 5.0 ! eV
  temps       = 1 ! K
  degaussw    = 0.005 ! eV
   
  nkf1 = 40
  nkf2 = 1
  nkf3 = 1
  nqf1 = 40
  nqf2 = 1
  nqf3 = 1
   
  nk1 = 40
  nk2 = 1
  nk3 = 1
  nq1 = 40
  nq2 = 1
  nq3 = 1
/    
</code></pre>

    <ul>
      <li>
        <p><a href="https://www.jianshu.com/p/e5e34d576c86"><strong>EPW声子谱和QE不一致</strong></a> (参考简书)<br />
 这个问题一般是由于声子求和规则导致的，EPW中提供了读入实空间力常数来计算声子频率的方法，并且也提供了相应的声子求和规则（与matdyn.f90里面的相同）。只需要改<a href="https://docs.epw-code.org/doc/Inputs.html#lifc"><strong><code class="language-plaintext highlighter-rouge">lifc = .true.</code></strong></a>，然后再设置声子求和规则<a href="https://docs.epw-code.org/doc/Inputs.html#asr-typ"><strong><code class="language-plaintext highlighter-rouge">asr_typ = crystal</code></strong></a>（我一般都取crystal），同时需要注意的是要保证之前计算QE得到的文件通过pp.py收集起来那个必须有q2r.x产生的实空间力常数文件并且已经被命名为 <strong>ifc.q2r</strong>，对于包含SOC的情况，这个文件必须叫 <strong>ifc.q2r.xml</strong> 并且是xml格式的文件。（这个一般不是太老的脚本pp.py都会自动帮你做这件事情。）参考<a href="https://forum.epw-code.org/index.php?f=3&amp;t=137">phonon bandstructure from EPW and matdyn.x don’t match</a></p>

        <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="w">  </span><span class="p">&amp;</span><span class="n">input</span><span class="w">  
  </span><span class="n">fildyn</span><span class="o">=</span><span class="s1">'carbyne.dyn'</span><span class="p">,</span><span class="w"> </span><span class="n">zasr</span><span class="o">=</span><span class="s1">'simple'</span><span class="p">,</span><span class="w"> </span><span class="n">flfrc</span><span class="o">=</span><span class="s1">'ifc.q2r'</span><span class="w">  
  </span><span class="p">/</span><span class="w">  
</span></pre></td></tr></tbody></table></code></pre></div>        </div>
      </li>
      <li>
        <p>第六步，使用第五步<code class="language-plaintext highlighter-rouge">epwwrite=.true.</code>设置输出的wannier表象下的电声耦合文件，计算不同<code class="language-plaintext highlighter-rouge">nqf</code>和<code class="language-plaintext highlighter-rouge">nkf</code>插值密度的EPW计算。使用<strong>runepw.sh</strong>脚本进行提交计算：</p>
      </li>
    </ul>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>
<span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>20 20 240<span class="si">)</span>
        <span class="k">do
        </span><span class="nb">cp </span>epw.in epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:epwwrite:epwwrite=.false. ! :g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:epwread:epwread=.true. !:g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:prtgkk:prtgkk=.true. !:g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:wannierize:wannierize=.false. !:g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:nkf1:nkf1=</span><span class="nv">$i</span><span class="s2"> !:g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:nqf1:nqf1=</span><span class="nv">$i</span><span class="s2"> !:g"</span> epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.in
   
        <span class="nb">cp </span>qe-epw.bsub qe-epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.bsub
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"2s:epw:epw</span><span class="k">${</span><span class="nv">i</span><span class="k">}</span><span class="s2">:g"</span> qe-epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.bsub
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:epw.in:epw</span><span class="k">${</span><span class="nv">i</span><span class="k">}</span><span class="s2">.in:g"</span> qe-epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.bsub
        <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:epw.out:epw</span><span class="k">${</span><span class="nv">i</span><span class="k">}</span><span class="s2">.out:g"</span> qe-epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.bsub
   
        bsub &lt; qe-epw<span class="k">${</span><span class="nv">i</span><span class="k">}</span>.bsub
        <span class="nb">sleep </span>10
        <span class="k">done</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <ul>
      <li>上述脚本，有可能由于epwread文件读取冲突，导致不能正常计算，使用下列命令，找出不能正常running的作业，重新提交。</li>
    </ul>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>20 20 240<span class="si">)</span><span class="p">;</span><span class="k">do </span><span class="nb">echo </span>epw<span class="nv">$i</span>.out<span class="p">;</span><span class="nb">head </span>epw<span class="nv">$i</span>.out<span class="p">;</span><span class="k">done</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <ul>
      <li>In directory epw to calculate the electron-phonon coupling matrix using the changed EPW code. And the output be named dependend on the kpoint: as epw40.out, epw80.out, epw120.out, epw160.out. Used to test the kpoint and qpoint convergence.</li>
    </ul>
  </li>
  <li>
    <p>构建目录，进行LVCSH.x的串行计算（只能单核计算，程序内的并行计算待开发）,需要测试<code class="language-plaintext highlighter-rouge">lit_ephonon</code>的值，由于低频声学支声子部分可能会导致计算结果发散，（低频声学支会导致Normal mode极大）</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nb">mkdir </span>LVCSH-epw40
<span class="nb">cp</span> ./epw/epw40.out ./LVCSH-epw40
<span class="nb">cd </span>LVCSH-epw40
vi LVCSH.in
LVCSH_complex.x &amp;
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="n">calculation</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s2">"lvcsh"</span><span class="w"> </span><span class="c1">! "lvcsh" or "plot"</span><span class="w">
</span><span class="n">verbosity</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="s2">"low"</span><span class="w">   </span><span class="c1">! "low" or "high"</span><span class="w">
</span><span class="n">l_dEa_dQ</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="kc">.false.</span><span class="w">
</span><span class="n">l_dEa2_dQ2</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="kc">.false.</span><span class="w">
</span><span class="n">outdir</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="s2">"./"</span><span class="w">
</span><span class="n">methodsh</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="s2">"FSSH"</span><span class="w">
</span><span class="n">lit_gmnvkq</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mf">0.0</span><span class="w">    </span><span class="c1">! in unit of meV</span><span class="w">
</span><span class="n">lit_ephonon</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">0.0</span><span class="w">    </span><span class="c1">! in unit of meV</span><span class="w">
</span><span class="n">eps_acustic</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">5.0</span><span class="w">    </span><span class="c1">! in unit of cm-1</span><span class="w">
</span><span class="n">lfeedback</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">lehpairsh</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="c1">!lelecsh       = .true.</span><span class="w">
</span><span class="c1">!lholesh       = .true.</span><span class="w">
</span><span class="c1">!ieband_min    = 3</span><span class="w">
</span><span class="c1">!ieband_max    = 4</span><span class="w">
</span><span class="c1">!ihband_min    = 1</span><span class="w">
</span><span class="c1">!ihband_max    = 2</span><span class="w">
</span><span class="c1">!lsortpes      = .false.</span><span class="w">
</span><span class="c1">!mix_thr       = 0.8</span><span class="w">
</span><span class="n">epwoutname</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="s2">"./epw.out"</span><span class="w">
</span><span class="c1">!nefre_sh      = 40</span><span class="w">
</span><span class="c1">!nhfre_sh      = 40</span><span class="w">
</span><span class="n">nnode</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span><span class="n">ncore</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span><span class="n">naver</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">2000</span><span class="w">
</span><span class="n">nsnap</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1000</span><span class="w">
</span><span class="n">nstep</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span><span class="n">dt</span><span class="w">            </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="n">savedsnap</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="mi">25</span><span class="w">
</span><span class="n">ldecoherence</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">Cdecoherence</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mf">0.1</span><span class="w">
</span><span class="n">l_ph_quantum</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">temp</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">300</span><span class="w">
</span><span class="n">pre_nstep</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="mi">50000</span><span class="w">
</span><span class="n">pre_dt</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="c1">!gamma         = 0.0   ! in unit of ps-1</span><span class="w">
</span><span class="n">ld_fric</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mf">0.01</span><span class="w">   </span><span class="c1">! </span><span class="w">
</span><span class="n">llaser</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">efield_cart</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0</span><span class="w"> </span><span class="mf">1.0</span><span class="w"> </span><span class="mf">1.0</span><span class="w">
</span><span class="n">w_laser</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mf">2.0</span><span class="w">  </span><span class="c1">! in unit of eV</span><span class="w">
</span><span class="n">fwhm</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">100</span><span class="w">  </span><span class="c1">! in unit of fs   </span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>构建目录使用手动方式进行LVCSH.x的并行计算(在不同的节点和核上进行不同轨迹的计算，计算完成后使用LVCSH.x程序后处理取平均值.)<br />
make a directory <strong>LVCSH</strong> for lvcsh calculation。并在LVCSH目录下放入LVCSH.in输入文件，以及并行计算的脚本和任务提交脚本bsub脚本。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">mkdir </span>LVCSH
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>3.1 make a lsf job script. Need to change the BUSB -q,-n,-R and MODULEPATH as your Environment.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="rouge-code"><pre>lvcsh.bsub
<span class="c">#!/bin/bash</span>
<span class="c">#BSUB -J JOB_NAME</span>
<span class="c">#BSUB -q QUEUE_NAME</span>
<span class="c">#BSUB -n ncore</span>
<span class="c">#BSUB -R "span[ptile=ncore]"</span>
<span class="c">#BSUB -o %J.out</span>
<span class="c">#BSUB -e %J.err</span>
   
<span class="c">#source ~/xh/.bashrc</span>
<span class="c">#export OMP_NUM_THREADS=1</span>
<span class="c">#export MKL_NUM_THREADS=1</span>
<span class="nb">export </span><span class="nv">MODULEPATH</span><span class="o">=</span><span class="nv">$MODULEPATH</span>:DIR_MODULEPATH
   
module load lvcsh/version
   
<span class="nv">CURDIR</span><span class="o">=</span><span class="nv">$PWD</span>
<span class="c">#Generate nodelist</span>
<span class="nb">rm</span> <span class="nt">-f</span> <span class="k">${</span><span class="nv">CURDIR</span><span class="k">}</span>/nodelist <span class="o">&gt;</span>&amp; /dev/null
<span class="k">for </span>i <span class="k">in</span> <span class="sb">`</span><span class="nb">echo</span> <span class="nv">$LSB_HOSTS</span><span class="sb">`</span>
<span class="k">do
</span><span class="nb">echo</span> <span class="nv">$i</span> <span class="o">&gt;&gt;</span> <span class="k">${</span><span class="nv">CURDIR</span><span class="k">}</span>/nodelist
<span class="k">done
   
</span><span class="nv">NP</span><span class="o">=</span><span class="sb">`</span><span class="nb">cat</span> <span class="k">${</span><span class="nv">CURDIR</span><span class="k">}</span>/nodelist |wc <span class="nt">-l</span><span class="sb">`</span>
   
<span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>1 1 <span class="nv">$NP</span><span class="si">)</span>
<span class="k">do
</span><span class="nb">mkdir </span>sample<span class="nv">$i</span>
<span class="nb">cp</span> ./LVCSH.in ./sample<span class="nv">$i</span>/
<span class="nb">cd</span> ./sample<span class="nv">$i</span>
LVCSH_complex.x &amp;
<span class="nb">cd</span> ..
<span class="k">done
</span><span class="nb">wait</span>
   
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>3.2 Use shell script mkepwdir.sh to build dir for diffrent kpoints and qpoints Surface hopping calculation. And the script will make a test running in the different director to give how to set <strong><code class="language-plaintext highlighter-rouge">nefre_sh</code></strong> and <strong><code class="language-plaintext highlighter-rouge">nhfre_sh</code></strong>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre>mkepwdir.sh
<span class="c">#!/bin/bash</span>
<span class="nv">ncore</span><span class="o">=</span>28
<span class="nv">MODULEPATH</span><span class="o">=</span><span class="s2">"/share/home/zw/xiehua/opt/modules-4.7.1/modulefiles"</span>
<span class="nv">lvcsh_version</span><span class="o">=</span><span class="s2">"0.6.6"</span>
<span class="nv">QUEUE_NAME</span><span class="o">=</span><span class="s2">"privateq-zw"</span>
<span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>80 40 80<span class="si">)</span>
  <span class="k">do
    </span><span class="nb">mkdir </span>epw<span class="nv">$i</span>
    <span class="nb">mkdir </span>epw<span class="nv">$i</span>/QEfiles
    <span class="nb">cp</span> ../epw/epw<span class="nv">$i</span>.out epw<span class="nv">$i</span>/QEfiles/
       
    <span class="nb">cp </span>lvcsh.bsub epw<span class="nv">$i</span>
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/ncore/</span><span class="nv">$ncore</span><span class="s2">/g"</span> epw<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:JOB_NAME:lvcsh-epw</span><span class="k">${</span><span class="nv">i</span><span class="k">}</span><span class="s2">-n0:g"</span> epw<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:QUEUE_NAME:</span><span class="nv">$QUEUE_NAME</span><span class="s2">:g"</span> epw<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:DIR_MODULEPATH:</span><span class="nv">$MODULEPATH</span><span class="s2">:g"</span> epw<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:version:</span><span class="nv">$lvcsh_version</span><span class="s2">:g"</span> epw<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">cp </span>job.sh epw<span class="nv">$i</span>
    <span class="nb">cp </span>LVCSH.in epw<span class="nv">$i</span>
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:./epw.out:../../QEfiles/epw</span><span class="nv">$i</span><span class="s2">.out:g"</span> epw<span class="nv">$i</span>/LVCSH.in
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:ncore:ncore         = </span><span class="nv">$ncore</span><span class="s2"> !:g"</span> epw<span class="nv">$i</span>/LVCSH.in
    <span class="nb">cp </span>lvcsh-test.bsub epw<span class="nv">$i</span>/lvcsh-plot.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"2s/JOB_NAME/lvcsh-epw</span><span class="nv">$i</span><span class="s2">-plot/g"</span> epw<span class="nv">$i</span>/lvcsh-plot.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:QUEUE_NAME:</span><span class="nv">$QUEUE_NAME</span><span class="s2">:g"</span> epw<span class="nv">$i</span>/lvcsh-plot.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:DIR_MODULEPATH:</span><span class="nv">$MODULEPATH</span><span class="s2"> :g"</span> epw<span class="nv">$i</span>/lvcsh-plot.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:version:</span><span class="nv">$lvcsh_version</span><span class="s2">:g"</span> epw<span class="nv">$i</span>/lvcsh-plot.bsub


    <span class="nb">cp </span>LVCSH.in epw<span class="nv">$i</span>/QEfiles
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:verbosity:verbosity     = "</span>high<span class="s2">" !:g"</span> epw<span class="nv">$i</span>/QEfiles/LVCSH.in
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:./epw.out:./epw</span><span class="nv">$i</span><span class="s2">.out:g"</span> epw<span class="nv">$i</span>/QEfiles/LVCSH.in
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:naver:naver         = 10 !:g"</span> epw<span class="nv">$i</span>/QEfiles/LVCSH.in
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:nsnap:nsnap         = 2  !:g"</span> epw<span class="nv">$i</span>/QEfiles/LVCSH.in
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:savedsnap:savedsnap     = 2 !:g"</span> epw<span class="nv">$i</span>/QEfiles/LVCSH.in
    <span class="nb">cp </span>lvcsh-test.bsub epw<span class="nv">$i</span>/QEfiles
    <span class="nb">cd </span>epw<span class="nv">$i</span>/QEfiles
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"2s/JOB_NAME/lvcsh-epw</span><span class="nv">$i</span><span class="s2">-test/g"</span> lvcsh-test.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:QUEUE_NAME:</span><span class="nv">$QUEUE_NAME</span><span class="s2">:g"</span> lvcsh-test.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:DIR_MODULEPATH:</span><span class="nv">$MODULEPATH</span><span class="s2"> :g"</span> lvcsh-test.bsub
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:version:</span><span class="nv">$lvcsh_version</span><span class="s2">:g"</span> lvcsh-test.bsub
    bsub &lt; lvcsh-test.bsub
    <span class="nb">cd</span> ../..    
  <span class="k">done</span>

</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>job.sh
<span class="c">#!/bin/bash</span>
    <span class="nv">nnode</span><span class="o">=</span>10
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s:nnode:nnode         = </span><span class="nv">$nnode</span><span class="s2"> !:g"</span> LVCSH.in
    <span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>1 1 <span class="nv">$nnode</span><span class="si">)</span>
    <span class="k">do 
    </span><span class="nb">mkdir </span>node<span class="nv">$i</span>
    <span class="nb">cp</span> ./lvcsh.bsub ./node<span class="nv">$i</span>/
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"2s/n0/n</span><span class="nv">$i</span><span class="s2">/g"</span> ./node<span class="nv">$i</span>/lvcsh.bsub
    <span class="nb">cp</span> ./LVCSH.in ./node<span class="nv">$i</span>/
    <span class="nb">cd</span> ./node<span class="nv">$i</span>
    bsub &lt; lvcsh.bsub
    <span class="nb">cd</span> ..
    <span class="k">done</span>  
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
</pre></td><td class="rouge-code"><pre><span class="n">LVCSH</span><span class="err">.</span><span class="k">in</span><span class="w">
</span><span class="n">calculation</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="s2">"lvcsh"</span><span class="w"> </span><span class="c1">! "lvcsh" or "plot"</span><span class="w">
</span><span class="n">verbosity</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="s2">"low"</span><span class="w">   </span><span class="c1">! "low" or "high"</span><span class="w">
</span><span class="n">l_dEa_dQ</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="kc">.false.</span><span class="w">
</span><span class="n">l_dEa2_dQ2</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="kc">.false.</span><span class="w">
</span><span class="n">outdir</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="s2">"./"</span><span class="w">
</span><span class="n">methodsh</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="s2">"FSSH"</span><span class="w">
</span><span class="n">lit_gmnvkq</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mf">0.0</span><span class="w">    </span><span class="c1">! in unit of meV</span><span class="w">
</span><span class="n">lit_ephonon</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">0.0</span><span class="w">    </span><span class="c1">! in unit of meV</span><span class="w">
</span><span class="n">eps_acustic</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">5.0</span><span class="w">    </span><span class="c1">! in unit of cm-1</span><span class="w">
</span><span class="n">lfeedback</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">lehpairsh</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="c1">!lelecsh       = .true.</span><span class="w">
</span><span class="c1">!lholesh       = .true.</span><span class="w">
</span><span class="n">ieband_min</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">9</span><span class="w">
</span><span class="n">ieband_max</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">9</span><span class="w">
</span><span class="n">ihband_min</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">8</span><span class="w">
</span><span class="n">ihband_max</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">8</span><span class="w">
</span><span class="c1">!lsortpes      = .false.</span><span class="w">
</span><span class="c1">!mix_thr       = 0.8</span><span class="w">
</span><span class="n">epwoutname</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="s2">"./epw.out"</span><span class="w">
</span><span class="c1">!nefre_sh      = 40</span><span class="w">
</span><span class="c1">!nhfre_sh      = 40</span><span class="w">
</span><span class="n">nnode</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span><span class="n">ncore</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w">
</span><span class="n">naver</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">5000</span><span class="w">
</span><span class="n">nsnap</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1000</span><span class="w">
</span><span class="n">nstep</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span><span class="n">dt</span><span class="w">            </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="n">savedsnap</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="mi">25</span><span class="w">
</span><span class="n">ldecoherence</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">Cdecoherence</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="mf">0.1</span><span class="w">
</span><span class="n">l_ph_quantum</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">temp</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">300</span><span class="w">
</span><span class="n">pre_nstep</span><span class="w">     </span><span class="o">=</span><span class="w"> </span><span class="mi">5000</span><span class="w">
</span><span class="n">pre_dt</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="c1">!gamma         = 0.0   ! in unit of ps-1</span><span class="w">
</span><span class="n">ld_fric</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mf">0.01</span><span class="w">   </span><span class="c1">! </span><span class="w">
</span><span class="n">llaser</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="kc">.true.</span><span class="w">
</span><span class="n">efield_cart</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mf">1.0</span><span class="w"> </span><span class="mf">1.0</span><span class="w"> </span><span class="mf">1.0</span><span class="w">
</span><span class="n">w_laser</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mf">2.0</span><span class="w">  </span><span class="c1">! in unit of eV</span><span class="w">
</span><span class="n">fwhm</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">100</span><span class="w">  </span><span class="c1">! in unit of fs</span><span class="w">

</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>lvcsh-test.bsub
<span class="c">#!/bin/bash</span>
<span class="c">#BSUB -J JOB_NAME</span>
<span class="c">#BSUB -q QUEUE_NAME</span>
<span class="c">#BSUB -n 1</span>
<span class="c">#BSUB -o %J.out</span>
<span class="c">#BSUB -e %J.err</span>
   
<span class="nb">export </span><span class="nv">MODULEPATH</span><span class="o">=</span><span class="nv">$MODULEPATH</span>:DIR_MODULEPATH
   
module load lvcsh/version
   
LVCSH_complex.x

</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>3.3 By look the initial adiabatic state in the QEfiles/LVCSH.out for different kpoints directory. Set the <strong><code class="language-plaintext highlighter-rouge">nefre_sh</code></strong> and <strong><code class="language-plaintext highlighter-rouge">nhfre_sh</code></strong> in the QEfiles/LVCSH.in to tests the time for one step nonadiabatic calculation. Then, subscrib the job again.</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>bsub &lt; lvcsh-test.bsub
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>3.4. change the LVCSH.in file in the epw40, including the parameters for lvcsh run as following:</p>

    <div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="n">ieband_min</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">9</span><span class="w">
</span><span class="n">ieband_max</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">9</span><span class="w">
</span><span class="n">ihband_min</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">8</span><span class="w">
</span><span class="n">ihband_max</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">8</span><span class="w">
</span><span class="n">epwoutname</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="s2">"../../QEfiles/epw120.out"</span><span class="w">
</span><span class="n">nefre_sh</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">34</span><span class="w">
</span><span class="n">nhfre_sh</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">34</span><span class="w">
</span><span class="n">nnode</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">10</span><span class="w">
</span><span class="n">ncore</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">28</span><span class="w">
</span><span class="n">naver</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">100</span><span class="w">
</span><span class="n">nstep</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span><span class="n">nsnap</span><span class="w">    </span><span class="o">=</span><span class="w"> </span><span class="mi">1000</span><span class="w">
</span><span class="n">dt</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mf">0.5</span><span class="w">
</span><span class="n">savedsnap</span><span class="o">=</span><span class="w"> </span><span class="mi">25</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>change the <strong><code class="language-plaintext highlighter-rouge">nnodes</code></strong> in the job.sh bash script. Then ‘./job.sh’ to make lvcsh running in <code class="language-plaintext highlighter-rouge">nnodes</code> node, which include <code class="language-plaintext highlighter-rouge">ncore</code> CPU cores.</p>

    <p>3.5 After the setp 7, change the parameter <code class="language-plaintext highlighter-rouge">calculation = plot</code> and <code class="language-plaintext highlighter-rouge">epwoutname = './QEfiles/epw40.out'</code> of  LVCSH.in in the dir <code class="language-plaintext highlighter-rouge">epw40</code>. Then run <code class="language-plaintext highlighter-rouge">LVCSH_complex.x</code> in <code class="language-plaintext highlighter-rouge">epw40</code> dir. The code will read the result in all nodes and cores, then get a average results and writing in the dir <code class="language-plaintext highlighter-rouge">epw40</code>.</p>
  </li>
</ol>

<h2 id="butterfly-of-the-code">Butterfly of the code</h2>

<p><img src="https://xh125.github.io/images/LVCSH/Butterfly-lvcsh.png" alt="Alt Butterfly" /></p>
:ET